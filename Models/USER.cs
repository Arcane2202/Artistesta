//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Artistesta.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    public partial class USER
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public USER()
        {
            this.BIDDER = new HashSet<BIDDER>();
            this.COMMENTS = new HashSet<COMMENTS>();
            this.FAVORITES = new HashSet<FAVORITES>();
            this.FOLLOWER = new HashSet<FOLLOWER>();
            this.FOLLOWER1 = new HashSet<FOLLOWER>();
            this.INTERACTION = new HashSet<INTERACTION>();
            this.PUBLISHART = new HashSet<PUBLISHART>();
            this.SUPPORT = new HashSet<SUPPORT>();
        }
    
        public int USERID { get; set; }

        [Required(ErrorMessage = "Field Cannot Be Empty")]
        [Display(Name = "Enter Username")]
        public string USERNAME { get; set; }

        [Required(ErrorMessage = "Field Cannot Be Empty")]
        [Display(Name = "Enter First Name")]
        public string FIRST_NAME { get; set; }

        [Required(ErrorMessage = "Field Cannot Be Empty")]
        [Display(Name = "Enter Last Name")]
        public string LAST_NAME { get; set; }

        [Required(ErrorMessage = "Field Cannot Be Empty")]
        [Display(Name = "Enter Email")]
        [DataType(DataType.EmailAddress)]
        public string EMAIL { get; set; }

        [Required(ErrorMessage = "Field Cannot Be Empty")]
        [Display(Name = "Enter Birthday")]
        public string BIRTHDAY { get; set; }

        [Required(ErrorMessage = "<br>Please Select your Gender")]
        [Display(Name = "Enter Your Pronouns")]
        public string PRONOUNS { get; set; }

        [Required(ErrorMessage = "<br>Please Select Your Country")]
        [Display(Name = "Enter Country")]
        public string COUNTRY { get; set; }

        [Required(ErrorMessage = "Field Cannot Be Empty")]
        [Display(Name = "Enter Password")]
        [DataType(DataType.Password)]
        public string PASSWORD { get; set; }

        [Required(ErrorMessage = "Field Cannot Be Empty")]
        [Display(Name = "Re-Enter Password")]
        [DataType(DataType.Password)]
        [NotMapped]
        [Compare("PASSWORD",ErrorMessage = "Passwords Do Not Match!")] 
        public string ConfirmPASSWORD { get; set; }

        public string DP { get; set; }
        public string COVER { get; set; }
        public string MOTTO { get; set; }
        public string CARD_NO { get; set; }
        public string CREATION_TIME { get; set; } = DateTime.Now.ToString();
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BIDDER> BIDDER { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<COMMENTS> COMMENTS { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FAVORITES> FAVORITES { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FOLLOWER> FOLLOWER { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FOLLOWER> FOLLOWER1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<INTERACTION> INTERACTION { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PUBLISHART> PUBLISHART { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SUPPORT> SUPPORT { get; set; }
    }
    public enum Country
    {
        Afghanistan, Albania, Algeria, Andorra, Angola, Argentina, Armenia, Australia, Austria, Azerbaijan, Bahamas, Bahrain, Bangladesh, Barbados, Belarus, Belgium, Belize, Benin, Bhutan, Bolivia, Botswana, Brazil, Brunei, Bulgaria, BurkinaFaso, Burundi, CôtedIvoire, CaboVerde, Cambodia, Cameroon, Canada, Chad, Chile, China, Colombia, Comoros, Congo, CostaRica, Croatia, Cuba, Cyprus, Czechia, Denmark, Djibouti, Dominica, Ecuador, Egypt, Eritrea, Estonia, EswatiniSwaziland, Ethiopia, Fiji, Finland, France, Gabon, Gambia, Georgia, Germany, Ghana, Greece, Grenada, Guatemala, Guinea, Guyana, Haiti, Honduras, Hungary, Iceland, India, Indonesia, Iran, Iraq, Ireland, Israel, Italy, Jamaica, Japan, Jordan, Kazakhstan, Kenya, Kiribati, Kuwait, Kyrgyzstan, Laos, Latvia, Lebanon, Lesotho, Liberia, Libya, Liechtenstein, Lithuania, Luxembourg, Madagascar, Malawi, Malaysia, Maldives, Mali, Malta, Mauritania, Mauritius, Mexico, Micronesia, Moldova, Monaco, Mongolia, Montenegro, Morocco, Mozambique, Myanmar, Namibia, Nauru, Nepal, Netherlands, NewZealand, Nicaragua, Niger, Nigeria, NorthKorea, NorthMacedonia, Norway, Oman, Pakistan, Palau, Palestine, Panama, PapuaNewGuinea, Paraguay, Peru, Philippines, Poland, Portugal, Qatar, Romania, Russia, Rwanda, SaintLucia, Samoa, SanMarino, SaudiArabia, Senegal, Serbia, Seychelles, SierraLeone, Singapore, Slovakia, Slovenia, SolomonIslands, Somalia, SouthAfrica, SouthKorea, SouthSudan, Spain, SriLanka, Sudan, Suriname, Sweden, Switzerland, Syria, Tajikistan, Tanzania, Thailand, TimorLeste, Togo, Tonga, Trinidad, Tunisia, Turkey, Turkmenistan, Tuvalu, Uganda, Ukraine, UAE, UK, USA, Uruguay, Uzbekistan, Vanuatu, Venezuela, Vietnam, Yemen, Zambia, Zimbabwe
    }

    public enum Gender
    {
        Male,
        Female,
        Others
    }
}
